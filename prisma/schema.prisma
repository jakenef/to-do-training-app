generator client {
  provider               = "prisma-client"
  output                 = "./generated"
  runtime                = "nodejs"
  moduleFormat           = "esm"
  generatedFileExtension = "ts"
  importFileExtension    = "ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model JwtBlacklist {
  id  String   @id
  exp DateTime

  @@index([exp])
}

enum ByuAccountType {
  NonByu
  Student
  Employee
  ServiceAccount
}

model User {
  ///////////////////
  // DO NOT MODIFY //
  ///////////////////
  // Object info
  id                 String         @id @default(uuid())
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  // Site info
  lastLogin          DateTime?
  roles              String[]       @default([])
  permissions        String[]       @default([])
  canProxyUntil      DateTime?
  // BYU info
  accountType        ByuAccountType
  netId              String         @unique
  byuId              String?
  workerId           String?
  // Person info
  firstName          String
  middleName         String?
  lastName           String
  suffix             String?
  preferredFirstName String
  preferredLastName  String
  ///////////////////
  // DO NOT MODIFY //
  ///////////////////

  // Additional fields can be added here:
  tasks Task[]
}

model Task {
  id            String    @id @default(uuid())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  title         String
  description   String?
  status        Status    @default(Incomplete)
  completedDate DateTime?
  owner         User      @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId       String
}

enum Status {
  Complete
  Incomplete
  InProgress
}
